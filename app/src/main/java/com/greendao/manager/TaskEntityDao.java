package com.greendao.manager;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.motor.administrator.DATAbase.greendao.TaskEntity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TASK_ENTITY".
*/
public class TaskEntityDao extends AbstractDao<TaskEntity, Long> {

    public static final String TABLENAME = "TASK_ENTITY";

    /**
     * Properties of entity TaskEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property UnitName = new Property(1, String.class, "unitName", false, "UNIT_NAME");
        public final static Property GasePumpNumber = new Property(2, String.class, "gasePumpNumber", false, "GASE_PUMP_NUMBER");
        public final static Property PeopleName = new Property(3, String.class, "peopleName", false, "PEOPLE_NAME");
        public final static Property _IsCompleteTask = new Property(4, boolean.class, "_IsCompleteTask", false, "__IS_COMPLETE_TASK");
        public final static Property TaskHaveGetData = new Property(5, int.class, "taskHaveGetData", false, "TASK_HAVE_GET_DATA");
        public final static Property GreateTaskTime = new Property(6, String.class, "greateTaskTime", false, "GREATE_TASK_TIME");
        public final static Property Csff = new Property(7, String.class, "csff", false, "CSFF");
        public final static Property Dlbb1 = new Property(8, String.class, "dlbb1", false, "DLBB1");
        public final static Property Dlbb2 = new Property(9, String.class, "dlbb2", false, "DLBB2");
        public final static Property Dybb1 = new Property(10, String.class, "dybb1", false, "DYBB1");
        public final static Property Dybb2 = new Property(11, String.class, "dybb2", false, "DYBB2");
        public final static Property Djk1 = new Property(12, String.class, "djk1", false, "DJK1");
        public final static Property Djksfxz1 = new Property(13, boolean.class, "djksfxz1", false, "DJKSFXZ1");
        public final static Property Djqblc1 = new Property(14, String.class, "djqblc1", false, "DJQBLC1");
        public final static Property Djcsff1 = new Property(15, String.class, "djcsff1", false, "DJCSFF1");
        public final static Property Djcdxl1 = new Property(16, String.class, "djcdxl1", false, "DJCDXL1");
        public final static Property Djcdfs1 = new Property(17, String.class, "djcdfs1", false, "DJCDFS1");
        public final static Property Djeddy1 = new Property(18, String.class, "djeddy1", false, "DJEDDY1");
        public final static Property Djeddl1 = new Property(19, String.class, "djeddl1", false, "DJEDDL1");
        public final static Property Djedgl1 = new Property(20, String.class, "djedgl1", false, "DJEDGL1");
        public final static Property Djedxl1 = new Property(21, String.class, "djedxl1", false, "DJEDXL1");
        public final static Property Djkzdl1 = new Property(22, String.class, "djkzdl1", false, "DJKZDL1");
        public final static Property Djkzgl1 = new Property(23, String.class, "djkzgl1", false, "DJKZGL1");
        public final static Property Djjs1 = new Property(24, String.class, "djjs1", false, "DJJS1");
        public final static Property Djwgjjdl1 = new Property(25, String.class, "djwgjjdl1", false, "DJWGJJDL1");
        public final static Property Djmbglys = new Property(26, String.class, "djmbglys", false, "DJMBGLYS");
        public final static Property By1 = new Property(27, String.class, "by1", false, "BY1");
        public final static Property By2 = new Property(28, String.class, "by2", false, "BY2");
        public final static Property By3 = new Property(29, String.class, "by3", false, "BY3");
        public final static Property By4 = new Property(30, String.class, "by4", false, "BY4");
        public final static Property By5 = new Property(31, String.class, "by5", false, "BY5");
        public final static Property By6 = new Property(32, String.class, "by6", false, "BY6");
        public final static Property By7 = new Property(33, String.class, "by7", false, "BY7");
        public final static Property By8 = new Property(34, String.class, "by8", false, "BY8");
        public final static Property By9 = new Property(35, String.class, "by9", false, "BY9");
        public final static Property By10 = new Property(36, String.class, "by10", false, "BY10");
        public final static Property By11 = new Property(37, String.class, "by11", false, "BY11");
        public final static Property By12 = new Property(38, String.class, "by12", false, "BY12");
    }


    public TaskEntityDao(DaoConfig config) {
        super(config);
    }
    
    public TaskEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TASK_ENTITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"UNIT_NAME\" TEXT," + // 1: unitName
                "\"GASE_PUMP_NUMBER\" TEXT," + // 2: gasePumpNumber
                "\"PEOPLE_NAME\" TEXT," + // 3: peopleName
                "\"__IS_COMPLETE_TASK\" INTEGER NOT NULL ," + // 4: _IsCompleteTask
                "\"TASK_HAVE_GET_DATA\" INTEGER NOT NULL ," + // 5: taskHaveGetData
                "\"GREATE_TASK_TIME\" TEXT," + // 6: greateTaskTime
                "\"CSFF\" TEXT," + // 7: csff
                "\"DLBB1\" TEXT," + // 8: dlbb1
                "\"DLBB2\" TEXT," + // 9: dlbb2
                "\"DYBB1\" TEXT," + // 10: dybb1
                "\"DYBB2\" TEXT," + // 11: dybb2
                "\"DJK1\" TEXT," + // 12: djk1
                "\"DJKSFXZ1\" INTEGER NOT NULL ," + // 13: djksfxz1
                "\"DJQBLC1\" TEXT," + // 14: djqblc1
                "\"DJCSFF1\" TEXT," + // 15: djcsff1
                "\"DJCDXL1\" TEXT," + // 16: djcdxl1
                "\"DJCDFS1\" TEXT," + // 17: djcdfs1
                "\"DJEDDY1\" TEXT," + // 18: djeddy1
                "\"DJEDDL1\" TEXT," + // 19: djeddl1
                "\"DJEDGL1\" TEXT," + // 20: djedgl1
                "\"DJEDXL1\" TEXT," + // 21: djedxl1
                "\"DJKZDL1\" TEXT," + // 22: djkzdl1
                "\"DJKZGL1\" TEXT," + // 23: djkzgl1
                "\"DJJS1\" TEXT," + // 24: djjs1
                "\"DJWGJJDL1\" TEXT," + // 25: djwgjjdl1
                "\"DJMBGLYS\" TEXT," + // 26: djmbglys
                "\"BY1\" TEXT," + // 27: by1
                "\"BY2\" TEXT," + // 28: by2
                "\"BY3\" TEXT," + // 29: by3
                "\"BY4\" TEXT," + // 30: by4
                "\"BY5\" TEXT," + // 31: by5
                "\"BY6\" TEXT," + // 32: by6
                "\"BY7\" TEXT," + // 33: by7
                "\"BY8\" TEXT," + // 34: by8
                "\"BY9\" TEXT," + // 35: by9
                "\"BY10\" TEXT," + // 36: by10
                "\"BY11\" TEXT," + // 37: by11
                "\"BY12\" TEXT);"); // 38: by12
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TASK_ENTITY\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TaskEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String unitName = entity.getUnitName();
        if (unitName != null) {
            stmt.bindString(2, unitName);
        }
 
        String gasePumpNumber = entity.getGasePumpNumber();
        if (gasePumpNumber != null) {
            stmt.bindString(3, gasePumpNumber);
        }
 
        String peopleName = entity.getPeopleName();
        if (peopleName != null) {
            stmt.bindString(4, peopleName);
        }
        stmt.bindLong(5, entity.get_IsCompleteTask() ? 1L: 0L);
        stmt.bindLong(6, entity.getTaskHaveGetData());
 
        String greateTaskTime = entity.getGreateTaskTime();
        if (greateTaskTime != null) {
            stmt.bindString(7, greateTaskTime);
        }
 
        String csff = entity.getCsff();
        if (csff != null) {
            stmt.bindString(8, csff);
        }
 
        String dlbb1 = entity.getDlbb1();
        if (dlbb1 != null) {
            stmt.bindString(9, dlbb1);
        }
 
        String dlbb2 = entity.getDlbb2();
        if (dlbb2 != null) {
            stmt.bindString(10, dlbb2);
        }
 
        String dybb1 = entity.getDybb1();
        if (dybb1 != null) {
            stmt.bindString(11, dybb1);
        }
 
        String dybb2 = entity.getDybb2();
        if (dybb2 != null) {
            stmt.bindString(12, dybb2);
        }
 
        String djk1 = entity.getDjk1();
        if (djk1 != null) {
            stmt.bindString(13, djk1);
        }
        stmt.bindLong(14, entity.getDjksfxz1() ? 1L: 0L);
 
        String djqblc1 = entity.getDjqblc1();
        if (djqblc1 != null) {
            stmt.bindString(15, djqblc1);
        }
 
        String djcsff1 = entity.getDjcsff1();
        if (djcsff1 != null) {
            stmt.bindString(16, djcsff1);
        }
 
        String djcdxl1 = entity.getDjcdxl1();
        if (djcdxl1 != null) {
            stmt.bindString(17, djcdxl1);
        }
 
        String djcdfs1 = entity.getDjcdfs1();
        if (djcdfs1 != null) {
            stmt.bindString(18, djcdfs1);
        }
 
        String djeddy1 = entity.getDjeddy1();
        if (djeddy1 != null) {
            stmt.bindString(19, djeddy1);
        }
 
        String djeddl1 = entity.getDjeddl1();
        if (djeddl1 != null) {
            stmt.bindString(20, djeddl1);
        }
 
        String djedgl1 = entity.getDjedgl1();
        if (djedgl1 != null) {
            stmt.bindString(21, djedgl1);
        }
 
        String djedxl1 = entity.getDjedxl1();
        if (djedxl1 != null) {
            stmt.bindString(22, djedxl1);
        }
 
        String djkzdl1 = entity.getDjkzdl1();
        if (djkzdl1 != null) {
            stmt.bindString(23, djkzdl1);
        }
 
        String djkzgl1 = entity.getDjkzgl1();
        if (djkzgl1 != null) {
            stmt.bindString(24, djkzgl1);
        }
 
        String djjs1 = entity.getDjjs1();
        if (djjs1 != null) {
            stmt.bindString(25, djjs1);
        }
 
        String djwgjjdl1 = entity.getDjwgjjdl1();
        if (djwgjjdl1 != null) {
            stmt.bindString(26, djwgjjdl1);
        }
 
        String djmbglys = entity.getDjmbglys();
        if (djmbglys != null) {
            stmt.bindString(27, djmbglys);
        }
 
        String by1 = entity.getBy1();
        if (by1 != null) {
            stmt.bindString(28, by1);
        }
 
        String by2 = entity.getBy2();
        if (by2 != null) {
            stmt.bindString(29, by2);
        }
 
        String by3 = entity.getBy3();
        if (by3 != null) {
            stmt.bindString(30, by3);
        }
 
        String by4 = entity.getBy4();
        if (by4 != null) {
            stmt.bindString(31, by4);
        }
 
        String by5 = entity.getBy5();
        if (by5 != null) {
            stmt.bindString(32, by5);
        }
 
        String by6 = entity.getBy6();
        if (by6 != null) {
            stmt.bindString(33, by6);
        }
 
        String by7 = entity.getBy7();
        if (by7 != null) {
            stmt.bindString(34, by7);
        }
 
        String by8 = entity.getBy8();
        if (by8 != null) {
            stmt.bindString(35, by8);
        }
 
        String by9 = entity.getBy9();
        if (by9 != null) {
            stmt.bindString(36, by9);
        }
 
        String by10 = entity.getBy10();
        if (by10 != null) {
            stmt.bindString(37, by10);
        }
 
        String by11 = entity.getBy11();
        if (by11 != null) {
            stmt.bindString(38, by11);
        }
 
        String by12 = entity.getBy12();
        if (by12 != null) {
            stmt.bindString(39, by12);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TaskEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String unitName = entity.getUnitName();
        if (unitName != null) {
            stmt.bindString(2, unitName);
        }
 
        String gasePumpNumber = entity.getGasePumpNumber();
        if (gasePumpNumber != null) {
            stmt.bindString(3, gasePumpNumber);
        }
 
        String peopleName = entity.getPeopleName();
        if (peopleName != null) {
            stmt.bindString(4, peopleName);
        }
        stmt.bindLong(5, entity.get_IsCompleteTask() ? 1L: 0L);
        stmt.bindLong(6, entity.getTaskHaveGetData());
 
        String greateTaskTime = entity.getGreateTaskTime();
        if (greateTaskTime != null) {
            stmt.bindString(7, greateTaskTime);
        }
 
        String csff = entity.getCsff();
        if (csff != null) {
            stmt.bindString(8, csff);
        }
 
        String dlbb1 = entity.getDlbb1();
        if (dlbb1 != null) {
            stmt.bindString(9, dlbb1);
        }
 
        String dlbb2 = entity.getDlbb2();
        if (dlbb2 != null) {
            stmt.bindString(10, dlbb2);
        }
 
        String dybb1 = entity.getDybb1();
        if (dybb1 != null) {
            stmt.bindString(11, dybb1);
        }
 
        String dybb2 = entity.getDybb2();
        if (dybb2 != null) {
            stmt.bindString(12, dybb2);
        }
 
        String djk1 = entity.getDjk1();
        if (djk1 != null) {
            stmt.bindString(13, djk1);
        }
        stmt.bindLong(14, entity.getDjksfxz1() ? 1L: 0L);
 
        String djqblc1 = entity.getDjqblc1();
        if (djqblc1 != null) {
            stmt.bindString(15, djqblc1);
        }
 
        String djcsff1 = entity.getDjcsff1();
        if (djcsff1 != null) {
            stmt.bindString(16, djcsff1);
        }
 
        String djcdxl1 = entity.getDjcdxl1();
        if (djcdxl1 != null) {
            stmt.bindString(17, djcdxl1);
        }
 
        String djcdfs1 = entity.getDjcdfs1();
        if (djcdfs1 != null) {
            stmt.bindString(18, djcdfs1);
        }
 
        String djeddy1 = entity.getDjeddy1();
        if (djeddy1 != null) {
            stmt.bindString(19, djeddy1);
        }
 
        String djeddl1 = entity.getDjeddl1();
        if (djeddl1 != null) {
            stmt.bindString(20, djeddl1);
        }
 
        String djedgl1 = entity.getDjedgl1();
        if (djedgl1 != null) {
            stmt.bindString(21, djedgl1);
        }
 
        String djedxl1 = entity.getDjedxl1();
        if (djedxl1 != null) {
            stmt.bindString(22, djedxl1);
        }
 
        String djkzdl1 = entity.getDjkzdl1();
        if (djkzdl1 != null) {
            stmt.bindString(23, djkzdl1);
        }
 
        String djkzgl1 = entity.getDjkzgl1();
        if (djkzgl1 != null) {
            stmt.bindString(24, djkzgl1);
        }
 
        String djjs1 = entity.getDjjs1();
        if (djjs1 != null) {
            stmt.bindString(25, djjs1);
        }
 
        String djwgjjdl1 = entity.getDjwgjjdl1();
        if (djwgjjdl1 != null) {
            stmt.bindString(26, djwgjjdl1);
        }
 
        String djmbglys = entity.getDjmbglys();
        if (djmbglys != null) {
            stmt.bindString(27, djmbglys);
        }
 
        String by1 = entity.getBy1();
        if (by1 != null) {
            stmt.bindString(28, by1);
        }
 
        String by2 = entity.getBy2();
        if (by2 != null) {
            stmt.bindString(29, by2);
        }
 
        String by3 = entity.getBy3();
        if (by3 != null) {
            stmt.bindString(30, by3);
        }
 
        String by4 = entity.getBy4();
        if (by4 != null) {
            stmt.bindString(31, by4);
        }
 
        String by5 = entity.getBy5();
        if (by5 != null) {
            stmt.bindString(32, by5);
        }
 
        String by6 = entity.getBy6();
        if (by6 != null) {
            stmt.bindString(33, by6);
        }
 
        String by7 = entity.getBy7();
        if (by7 != null) {
            stmt.bindString(34, by7);
        }
 
        String by8 = entity.getBy8();
        if (by8 != null) {
            stmt.bindString(35, by8);
        }
 
        String by9 = entity.getBy9();
        if (by9 != null) {
            stmt.bindString(36, by9);
        }
 
        String by10 = entity.getBy10();
        if (by10 != null) {
            stmt.bindString(37, by10);
        }
 
        String by11 = entity.getBy11();
        if (by11 != null) {
            stmt.bindString(38, by11);
        }
 
        String by12 = entity.getBy12();
        if (by12 != null) {
            stmt.bindString(39, by12);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TaskEntity readEntity(Cursor cursor, int offset) {
        TaskEntity entity = new TaskEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // unitName
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // gasePumpNumber
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // peopleName
            cursor.getShort(offset + 4) != 0, // _IsCompleteTask
            cursor.getInt(offset + 5), // taskHaveGetData
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // greateTaskTime
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // csff
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // dlbb1
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // dlbb2
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // dybb1
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // dybb2
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // djk1
            cursor.getShort(offset + 13) != 0, // djksfxz1
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // djqblc1
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // djcsff1
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // djcdxl1
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // djcdfs1
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // djeddy1
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // djeddl1
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // djedgl1
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // djedxl1
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // djkzdl1
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // djkzgl1
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // djjs1
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // djwgjjdl1
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // djmbglys
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // by1
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // by2
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // by3
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // by4
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // by5
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // by6
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // by7
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // by8
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // by9
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // by10
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // by11
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38) // by12
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TaskEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setUnitName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setGasePumpNumber(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPeopleName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.set_IsCompleteTask(cursor.getShort(offset + 4) != 0);
        entity.setTaskHaveGetData(cursor.getInt(offset + 5));
        entity.setGreateTaskTime(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCsff(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setDlbb1(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDlbb2(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDybb1(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDybb2(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setDjk1(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDjksfxz1(cursor.getShort(offset + 13) != 0);
        entity.setDjqblc1(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDjcsff1(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setDjcdxl1(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setDjcdfs1(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setDjeddy1(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setDjeddl1(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setDjedgl1(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setDjedxl1(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setDjkzdl1(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setDjkzgl1(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setDjjs1(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setDjwgjjdl1(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setDjmbglys(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setBy1(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setBy2(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setBy3(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setBy4(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setBy5(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setBy6(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setBy7(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setBy8(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setBy9(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setBy10(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setBy11(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setBy12(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TaskEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TaskEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TaskEntity entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
